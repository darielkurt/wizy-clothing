{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n} // import {\n//   firestore,\n//   convertCollectionsSnapshotToMap,\n//   signInWithGoogle,\n// } from \"../../firebase/firebase.utils\";\n// import {\n//   fetchCollectionsSuccess,\n//   fetchCollectionsFailure,\n// } from \"./shop.actions\";\n// import ShopActionTypes from \"./shop.types\";\n// export function* fetchCollectionAsync() {\n//   yield console.log(\"i am fired\");\n//   try {\n//     const collectionRef = firestore.collection(\"collections\");\n//     const snapshot = yield collectionRef.get();\n//     const collectionsMap = yield call(\n//       convertCollectionsSnapshotToMap,\n//       snapshot\n//     );\n//     yield put(fetchCollectionsSuccess(collectionsMap));\n//   } catch (error) {\n//     yield put(fetchCollectionsFailure(error.message));\n//   }\n// }\n// export function* fetchCollectionsStart() {\n//   yield takeLatest(\n//     ShopActionTypes.FETCH_COLLECTIONS_START,\n//     fetchCollectionAsync\n//   );\n// }","map":{"version":3,"sources":["/Users/kurt/Documents/Una/ReactJS-Course/wizy-clothing/src/redux/user/user.sagas.js"],"names":["put","takeLatest","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAArB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACK,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMpB,GAAG,CAACM,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA2D;AAC9D,MAAI;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACO,kBAAkB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAnB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMpB,GAAG,CAACQ,kBAAkB,CAACY,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACG,eAAe,CAACuB,oBAAjB,EAAuCf,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACG,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { put, takeLatest, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from './user.types'\n\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions'\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch(error) {\n        yield put(googleSignInFailure(error))\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password)\n        const userRef = yield call(createUserProfileDocument, user)\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\n    } catch(error) {\n        yield put(emailSignInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}\n\n// import {\n//   firestore,\n//   convertCollectionsSnapshotToMap,\n//   signInWithGoogle,\n// } from \"../../firebase/firebase.utils\";\n\n// import {\n//   fetchCollectionsSuccess,\n//   fetchCollectionsFailure,\n// } from \"./shop.actions\";\n\n// import ShopActionTypes from \"./shop.types\";\n\n// export function* fetchCollectionAsync() {\n//   yield console.log(\"i am fired\");\n\n//   try {\n//     const collectionRef = firestore.collection(\"collections\");\n//     const snapshot = yield collectionRef.get();\n//     const collectionsMap = yield call(\n//       convertCollectionsSnapshotToMap,\n//       snapshot\n//     );\n//     yield put(fetchCollectionsSuccess(collectionsMap));\n//   } catch (error) {\n//     yield put(fetchCollectionsFailure(error.message));\n//   }\n// }\n\n// export function* fetchCollectionsStart() {\n//   yield takeLatest(\n//     ShopActionTypes.FETCH_COLLECTIONS_START,\n//     fetchCollectionAsync\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}